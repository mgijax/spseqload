#format: sh
#
#  sp_common.config.defaults
#
#  This file sets up environment variables that are needed for the
#  SwissProt Sequence load
# 
#  IMPORTANT: This file is dependent on FILEDIR set in either spseqload.config
#             or trseqload.config
###########################################################################

###########################################################################
#
#  GENERAL SETTINGS
#
###########################################################################

#  Installation directory for the SwissProt sequence load
INSTALLDIR=/usr/local/mgi/3.0/dataload/spseqload
#INSTALLDIR=/home/sc/jsam/spseqload

#  Installation directory for the mgi DB utilities product
DBUTILSDIR=/usr/local/mgi/3.0/dbutils/mgidbutilities
#DBUTILSDIR=/home/sc/jsam/mgidbutilities

# Installation directory for the radar dbutilites product
RADARDBUTILSDIR=/usr/local/mgi/3.0/dbutils/radardbutilities
#RADARDBUTILSDIR=/home/sc/jsam/radardbutilities
 
#  Installation directory for the QC report product
QCRPTDIR=/usr/local/mgi/3.0/qcreports_db
#QCRPTDIR=/home/sc/jsam/qcreports_db

export INSTALLDIR DBUTILSDIR RADARDBUTILSDIR QCRPTDIR

###########################################################################
#
#  DATABASE SETTINGS BY DATABASE
#
###########################################################################

# MGD Connection parameters 
MGD_DBSERVER=DEV1_MGI
MGD_DBURL=rohan.informatics.jax.org:4101
MGD_DBNAME=mgd_jsamlec
#MGD_DBNAME=mgd_jsamsc
MGD_DBUSER=mgd_dbo
MGD_DBPASSWORDFILE=${DBUTILSDIR}/.mgd_dbo_password
MGD_DBSCHEMADIR=/usr/local/mgi/3.0/dbutils/mgd_jsamlec/mgddbschema
#MGD_DBSCHEMADIR=/home/sc/jsam/mgddbschema

export MGD_DBSERVER MGD_DBURL MGD_DBNAME
export MGD_DBUSER MGD_DBPASSWORDFILE MGD_DBSCHEMADIR

# RADAR Connection parameters 
RADAR_DBSERVER=DEV1_MGI
RADAR_DBURL=rohan.informatics.jax.org:4101
RADAR_DBNAME=radar_jsam
RADAR_DBUSER=mgd_dbo
RADAR_DBPASSWORDFILE=${DBUTILSDIR}/.mgd_dbo_password
#RADAR_DBSCHEMADIR=/home/sc/jsam/radardbschema
RADAR_DBSCHEMADIR=/usr/local/mgi/3.0/dbutils/radar_jsam/radardbschema

export RADAR_DBSERVER RADAR_DBURL RADAR_DBNAME RADAR_DBUSER 
export RADAR_DBPASSWORDFILE RADAR_DBSCHEMADIR 

###########################################################################
#
#  SOFTWARE SETTINGS
#
###########################################################################

JAVA_HOME=/usr/j2se
JAVA_RUN=${JAVA_HOME}/bin/java
# allow 2G initial and max heap memory
JAVARUNTIMEOPTS="-Xms2G -Xmx2G"    

JAVA_LIB=/usr/local/mgi/3.0/lib/java1.4/dla.jar:/usr/local/mgi/3.0/lib/java1.4/core.jar:/usr/local/mgi/3.0/lib/java1.4/dbsmgd.jar:/usr/local/mgi/3.0/lib/java1.4/dbsrdr.jar

CLASSPATH=.:${INSTALLDIR}/spseqload.jar:${JAVA_LIB}:${COMMON_CLASSPATH}

#CLASSPATH=.:/home/sc/jsam/spseqload/classes:/home/sc/jsam/lib_java_core/classes:/home/sc/jsam/lib_java_dbsmgd/classes:/home/sc/jsam/lib_java_dbsrdr/classes:/home/sc/jsam/lib_java_dla/classes:${JAVA_HOME}/jre/lib/rt.jar:/opt/sybase/12.5/jConnect-5_5/classes/jconn2.jar

DLAFUNCTIONS=${RADARDBUTILSDIR}/bin/DLAfunctions.sh

JOBSTART_CSH=${RADARDBUTILSDIR}/bin/startJobStream.csh
JOBEND_CSH=${RADARDBUTILSDIR}/bin/endJobStream.csh

export JAVA_HOME JAVA_RUN JAVARUNTIMEOPTS CLASSPATH DLAFUNCTIONS
export JOBSTART_CSH JOBEND_CSH

###########################################################################
#
#  LOAD SPECIFIC SETTINGS
#
###########################################################################

#  Java applications
SPSEQLOAD_APP=org.jax.mgi.app.spseqloader.SPSeqloader

#  loader shell script
SPSEQLOAD_SH=${INSTALLDIR}/bin/spseqload.sh

# seqloader QC report script
SEQLOAD_QCRPT=${QCRPTDIR}/seqload/runQC.csh

# molecular source processor QC report script
MSP_QCRPT=${QCRPTDIR}/msp/runQC.csh

export SPSEQLOAD_APP SPSEQLOAD_SH SEQLOAD_QCRPT MSP_QCRPT

#  Path name of the data, report, log and archive directories
LOGDIR=${FILEDIR}/logs
RPTDIR=${FILEDIR}/reports
ARCHIVEDIR=${FILEDIR}/archive

export LOGDIR RPTDIR ARCHIVEDIR

#  Complete path name of the SwissProt input file(s)
#  frameworks expects the value 'STDIN' if jobstream script pipes input and
#  jobstream expects the variable PIPED_INFILE to be defined
INFILE_NAME=STDIN

# method to cat files to stdin, generally 'cat' or 'gunzip -c'
CAT_METHOD="/usr/local/bin/gunzip -c"

# SwissProt sequence record regex end delimiter
#INFILE_END_DELIMITER="^//"

# SwissProt sequence record regex start delimiter
INFILE_BEGIN_DELIMITER="^ID"

# SwissProt sequence record regex end delimiter not including sequence
INFILE_END_DELIMITER="^SQ"

# Note: Using string delims causes first record to be skipped if
# there is not a header
# SwissProt sequence record String start delimiter
#INFILE_BEGIN_DELIMITER=ID

# SwissProt sequence record String end delimiter not including sequence
#INFILE_END_DELIMITER=SQ

# true = regex matching for finding record delim is turned on
INFILE_USE_REGEX=true

# buffersize in bytes used by nio.ByteBuffer
# 21,000,000 = ~20 MB
INFILE_BUFFERSIZE=21000000

# incremental, incremental_initial, or delete_reload
# incremental_initial doesn't use a MergeSplitProcessor
SEQ_LOAD_MODE=delete_reload

# Don't use associated clones to determine swissprot/trembl sequence source
MS_OK_TO_SEARCH_ASSOC_CLONES=false

# path to repeat file; file spseqload writes sequences found more than
# once in the input
SEQ_REPEAT_FILE=${FILEDIR}/data/repeats.out

export INFILE_NAME INFILE_BEGIN_DELIMITER INFILE_END_DELIMITER 
export INFILE_USE_REGEX INFILE_BUFFERSIZE SEQ_LOAD_MODE 
export MS_OK_TO_SEARCH_ASSOC_CLONES SEQ_REPEAT_FILE

# SEQ_Sequence sequence type controlled vocab for protein
SEQ_TYPE=Polypeptide

# true if a virtual (computationally derived) sequence
SEQ_VIRTUAL=true

# organisms to load
LOAD_MOUSE=true
LOAD_RAT=false
LOAD_HUMAN=false

export SEQ_TYPE SEQ_VIRTUAL 
export LOAD_MOUSE LOAD_RAT LOAD_HUMAN 

#  Complete path name of the log files
LOG_PROC=${LOGDIR}/spseqload.proc.log
LOG_DIAG=${LOGDIR}/spseqload.diag.log
LOG_CUR=${LOGDIR}/spseqload.cur.log
LOG_VAL=${LOGDIR}/spseqload.val.log

# Send debug messages to the diagnostic log
LOG_DEBUG=true

export LOG_PROC LOG_DIAG LOG_CUR LOG_VAL LOG_DEBUG


###########################################################################
#
#  BCP MANAGER SETTINGS BY DATABASE
#
###########################################################################

#  Settings used to create a BCP manager for the MGD database
MGD_BCP_PATH=${FILEDIR}/data
MGD_BCP_PREVENT_EXECUTE=false
MGD_BCP_TRUNCATE_LOG=true
MGD_BCP_DROP_INDEXES=true
MGD_BCP_RECORD_STAMPING=false
MGD_BCP_AUTO_FLUSH=false
MGD_BCP_OK_TO_OVERWRITE=false

export MGD_BCP_PATH MGD_BCP_PREVENT_EXECUTE MGD_BCP_TRUNCATE_LOG
export MGD_BCP_DROP_INDEXES MGD_BCP_RECORD_STAMPING MGD_BCP_AUTO_FLUSH
export MGD_BCP_OK_TO_OVERWRITE

#  Settings used to create a BCP manager for the MGD database
RADAR_BCP_PATH=${FILEDIR}/data
RADAR_BCP_PREVENT_EXECUTE=false
RADAR_BCP_TRUNCATE_LOG=true
RADAR_BCP_DROP_INDEXES=true
RADAR_BCP_RECORD_STAMPING=false
RADAR_BCP_AUTO_FLUSH=false
RADAR_BCP_OK_TO_OVERWRITE=false

export RADAR_BCP_PATH RADAR_BCP_PREVENT_EXECUTE RADAR_BCP_TRUNCATE_LOG
export RADAR_BCP_DROP_INDEXES RADAR_BCP_RECORD_STAMPING RADAR_BCP_AUTO_FLUSH
export RADAR_BCP_OK_TO_OVERWRITE

###########################################################################
#
#  SQL SCRIPTWRITER SETTINGS FOR updates
#
###########################################################################

# setting used to create a ScriptWriter for the MGD database
MGD_SCP_PATH=${MGD_BCP_PATH}
MGD_SCP_PREVENT_EXECUTE=false
MGD_SCP_OK_TO_OVERWRITE=false

# Use default = script
MGD_SCP_FILENAME=updates

# Use defaults
#MGD_SCP_SUFFIX=
#MGD_SCP_OUTFILENAME=
#MGD_SCP_OUTSUFFIX=

export MGD_SCP_PATH MGD_SCP_PREVENT_EXECUTE MGD_SCP_OK_TO_OVERWRITE
#export MGD_SCP_FILENAME MGD_SCP_SUFFIX MGD_SCP_OUTFILENAME MGD_SCP_OUTSUFFIX

###########################################################################
#
#  SQL SCRIPTWRITER SETTINGS FOR Merges and Splits
#
###########################################################################

# setting used to create a ScriptWriter for the merges and split
SCP_PATH=${MGD_BCP_PATH}
SCP_PREVENT_EXECUTE=false
SCP_OK_TO_OVERWRITE=false

# Use default = script
SCP_FILENAME=mergeSplits

# Use defaults
#SCP_SUFFIX=
#SCP_OUTFILENAME=
#SCP_OUTSUFFIX=

export SCP_PATH SCP_PREVENT_EXECUTE SCP_OK_TO_OVERWRITE
#export SCP_FILENAME SCP_SUFFIX SCP_OUTFILENAME SCP_OUTSUFFIX


###########################################################################
#
#  MISCELLANEOUS SETTINGS
#
###########################################################################

#  Recipient list for mailing the log files (comma-separated)
MAIL_LOG_PROC="sc"
MAIL_LOG_CUR=""

export MAIL_LOG_PROC MAIL_LOG_CUR
